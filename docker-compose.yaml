services:
  frontend:
    image: ghcr.io/silverminer007/chronos-frontend:dev-master
    ports:
      - "8080:8080"
      - "5005:5005"
      - "35729:35729"
    env_file: .env
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      db:
        condition: service_healthy
    networks:
      frontend:
    volumes:
      - ./logs/:/logs/

  cron:
    image: ghcr.io/silverminer007/chronos-cron:dev-master
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    networks:
      backend:
    volumes:
      - ./logs/:/logs/

  db:
    image: mysql
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PWD}
      MYSQL_DATABASE: chronos
    volumes:
      - chronos-database-mariadb:/var/lib/mysql
#      - type: bind
 #       source: ./chronos-production2.sql
 #       target: /docker-entrypoint-initdb.d/chronos-production.sql
    networks:
      frontend:
      backend:
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  email:
    image: ghcr.io/silverminer007/email:dev-master
    ports:
      - "8090:8080"
    container_name: email
    env_file: .env
    networks:
      messaging:
    volumes:
      - ./logs/:/logs/

volumes:
  chronos-database-mariadb:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  messaging:
    driver: bridge
